name: Build and Release

on:
  push:
    tags:
      - 'v*' # Triggers on version tags like v1.1.3
  workflow_dispatch: # Allows manual trigger
    inputs:
      create_release:
        description: 'Create a new release'
        required: false
        default: true
        type: boolean

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.1'
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Create missing directories and files
        run: |
          # Create directories if they don't exist
          mkdir -p build
          mkdir -p Logs
          mkdir -p Data
          
          # Ensure .env exists (it should already exist)
          if [ ! -f .env ]; then
            echo "# Environment variables for Pro Backup" > .env
          fi
          
          # Add placeholder files to ensure directories are not empty
          if [ ! -f build/.gitkeep ]; then
            echo "# Build artifacts directory" > build/.gitkeep
          fi
          
          if [ ! -f Logs/.gitkeep ]; then
            echo "# Application logs directory" > Logs/.gitkeep
          fi

      - name: Get package version
        id: package-version
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
        shell: bash

      - name: Build application for macOS
        run: yarn build:mac
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: List dist directory
        run: ls -la dist/
        shell: bash

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mac-build
          path: dist/
          retention-days: 1

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') || (github.event_name == 'workflow_dispatch' && github.event.inputs.create_release == true)

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.17.1'

      - name: Get package version
        id: package-version
        run: |
          echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Display structure of downloaded files
        run: find artifacts -type f -name "*" | head -20

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ steps.package-version.outputs.version }}
          name: Pro Backup v${{ steps.package-version.outputs.version }}
          body: |
            ## What's Changed
            
            Auto-generated release for Pro Backup v${{ steps.package-version.outputs.version }}
            
            ### Downloads
            
            **macOS:**
            - `.dmg` - macOS disk image for manual installation (Intel & Apple Silicon)
            - `.zip` - macOS auto-updater package (Intel & Apple Silicon)
            
            ### Auto-Update Files
            The following files are required for auto-updates:
            - `latest-mac.yml` - macOS auto-updater metadata
            
            ---
            *This release was automatically generated by GitHub Actions*
          draft: false
          prerelease: false
          files: |
            artifacts/mac-build/*.dmg
            artifacts/mac-build/*.zip
            artifacts/mac-build/latest-mac.yml
          token: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    needs: [build, release]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Delete artifacts
        uses: geekyeggo/delete-artifact@v5
        with:
          name: mac-build
